"use strict";

var __awaiter = undefined && undefined.__awaiter || function (thisArg, _arguments, Promise, generator) {
    return new Promise(function (resolve, reject) {
        generator = generator.call(thisArg, _arguments);
        function cast(value) {
            return value instanceof Promise && value.constructor === Promise ? value : new Promise(function (resolve) {
                resolve(value);
            });
        }
        function onfulfill(value) {
            try {
                step("next", value);
            } catch (e) {
                reject(e);
            }
        }
        function onreject(value) {
            try {
                step("throw", value);
            } catch (e) {
                reject(e);
            }
        }
        function step(verb, value) {
            var result = generator[verb](value);
            result.done ? resolve(result.value) : cast(result.value).then(onfulfill, onreject);
        }
        step("next", void 0);
    });
};
var aurelia_adal_1 = require('./aurelia-adal');
exports.AureliaAdal = aurelia_adal_1.AureliaAdal;
var aurelia_adal_fetch_config_1 = require('./aurelia-adal-fetch-config');
exports.AureliaAdalFetchConfig = aurelia_adal_fetch_config_1.AureliaAdalFetchConfig;
var aurelia_adal_authorize_step_1 = require('./aurelia-adal-authorize-step');
exports.AureliaAdalAuthorizeStep = aurelia_adal_authorize_step_1.AureliaAdalAuthorizeStep;
function configure(frameworkConfig, config) {
    var aureliaAdal = frameworkConfig.container.get(aurelia_adal_1.AureliaAdal);
    aureliaAdal.configure(config);
}
exports.configure = configure;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzIiwiaW5kZXgudHMiXSwibmFtZXMiOlsiY29uZmlndXJlIl0sIm1hcHBpbmdzIjoiOztBQUFBLElBQUksU0FBUyxHQUFHLEFBQUMsYUFBUSxVQUFLLFNBQVMsSUFBSyxVQUFVLE9BQU8sRUFBRSxVQUFVLEVBQUUsT0FBTyxFQUFFLFNBQVMsRUFBRTtBQUMzRixXQUFPLElBQUksT0FBTyxDQUFDLFVBQVUsT0FBTyxFQUFFLE1BQU0sRUFBRTtBQUMxQyxpQkFBUyxHQUFHLFNBQVMsQ0FBQyxJQUFJLENBQUMsT0FBTyxFQUFFLFVBQVUsQ0FBQyxDQUFDO0FBQ2hELGlCQUFTLElBQUksQ0FBQyxLQUFLLEVBQUU7QUFBRSxtQkFBTyxLQUFLLFlBQVksT0FBTyxJQUFJLEtBQUssQ0FBQyxXQUFXLEtBQUssT0FBTyxHQUFHLEtBQUssR0FBRyxJQUFJLE9BQU8sQ0FBQyxVQUFVLE9BQU8sRUFBRTtBQUFFLHVCQUFPLENBQUMsS0FBSyxDQUFDLENBQUM7YUFBRSxDQUFDLENBQUM7U0FBRTtBQUN4SixpQkFBUyxTQUFTLENBQUMsS0FBSyxFQUFFO0FBQUUsZ0JBQUk7QUFBRSxvQkFBSSxDQUFDLE1BQU0sRUFBRSxLQUFLLENBQUMsQ0FBQzthQUFFLENBQUMsT0FBTyxDQUFDLEVBQUU7QUFBRSxzQkFBTSxDQUFDLENBQUMsQ0FBQyxDQUFDO2FBQUU7U0FBRTtBQUNuRixpQkFBUyxRQUFRLENBQUMsS0FBSyxFQUFFO0FBQUUsZ0JBQUk7QUFBRSxvQkFBSSxDQUFDLE9BQU8sRUFBRSxLQUFLLENBQUMsQ0FBQzthQUFFLENBQUMsT0FBTyxDQUFDLEVBQUU7QUFBRSxzQkFBTSxDQUFDLENBQUMsQ0FBQyxDQUFDO2FBQUU7U0FBRTtBQUNuRixpQkFBUyxJQUFJLENBQUMsSUFBSSxFQUFFLEtBQUssRUFBRTtBQUN2QixnQkFBSSxNQUFNLEdBQUcsU0FBUyxDQUFDLElBQUksQ0FBQyxDQUFDLEtBQUssQ0FBQyxDQUFDO0FBQ3BDLGtCQUFNLENBQUMsSUFBSSxHQUFHLE9BQU8sQ0FBQyxNQUFNLENBQUMsS0FBSyxDQUFDLEdBQUcsSUFBSSxDQUFDLE1BQU0sQ0FBQyxLQUFLLENBQUMsQ0FBQyxJQUFJLENBQUMsU0FBUyxFQUFFLFFBQVEsQ0FBQyxDQUFDO1NBQ3RGO0FBQ0QsWUFBSSxDQUFDLE1BQU0sRUFBRSxLQUFLLENBQUMsQ0FBQyxDQUFDO0tBQ3hCLENBQUMsQ0FBQztDQUNOLENBQUM7QUNWRixJQUFBLGNBQUEsR0FBQSxPQUFBLENBQTRCLGdCQUFnQixDQUFDLENBQUE7QUFXekMsT0FBQSxDQUFBLFdBQVcsR0FBQSxjQUFBLENBQUEsV0FBQSxDQUFBO0FBVmYsSUFBQSwyQkFBQSxHQUFBLE9BQUEsQ0FBdUMsNkJBQTZCLENBQUMsQ0FBQTtBQVlqRSxPQUFBLENBQUEsc0JBQXNCLEdBQUEsMkJBQUEsQ0FBQSxzQkFBQSxDQUFBO0FBWDFCLElBQUEsNkJBQUEsR0FBQSxPQUFBLENBQXlDLCtCQUErQixDQUFDLENBQUE7QUFZckUsT0FBQSxDQUFBLHdCQUF3QixHQUFBLDZCQUFBLENBQUEsd0JBQUEsQ0FBQTtBQVY1QixTQUFBLFNBQUEsQ0FBMEIsZUFBdUMsRUFBRSxNQUF5QixFQUFBO0FBQzFGQSxRQUFJQSxXQUFXQSxHQUFnQkEsZUFBZUEsQ0FBQ0EsU0FBU0EsQ0FBQ0EsR0FBR0EsQ0FBQ0EsY0FBQUEsQ0FBQUEsV0FBV0EsQ0FBQ0EsQ0FBQ0E7QUFFMUVBLGVBQVdBLENBQUNBLFNBQVNBLENBQUNBLE1BQU1BLENBQUNBLENBQUNBO0NBQy9CQTtBQUplLE9BQUEsQ0FBQSxTQUFTLEdBQUEsU0FJeEIsQ0FBQSIsImZpbGUiOiJpbmRleC5qcyIsInNvdXJjZXNDb250ZW50IjpbInZhciBfX2F3YWl0ZXIgPSAodGhpcyAmJiB0aGlzLl9fYXdhaXRlcikgfHwgZnVuY3Rpb24gKHRoaXNBcmcsIF9hcmd1bWVudHMsIFByb21pc2UsIGdlbmVyYXRvcikge1xuICAgIHJldHVybiBuZXcgUHJvbWlzZShmdW5jdGlvbiAocmVzb2x2ZSwgcmVqZWN0KSB7XG4gICAgICAgIGdlbmVyYXRvciA9IGdlbmVyYXRvci5jYWxsKHRoaXNBcmcsIF9hcmd1bWVudHMpO1xuICAgICAgICBmdW5jdGlvbiBjYXN0KHZhbHVlKSB7IHJldHVybiB2YWx1ZSBpbnN0YW5jZW9mIFByb21pc2UgJiYgdmFsdWUuY29uc3RydWN0b3IgPT09IFByb21pc2UgPyB2YWx1ZSA6IG5ldyBQcm9taXNlKGZ1bmN0aW9uIChyZXNvbHZlKSB7IHJlc29sdmUodmFsdWUpOyB9KTsgfVxuICAgICAgICBmdW5jdGlvbiBvbmZ1bGZpbGwodmFsdWUpIHsgdHJ5IHsgc3RlcChcIm5leHRcIiwgdmFsdWUpOyB9IGNhdGNoIChlKSB7IHJlamVjdChlKTsgfSB9XG4gICAgICAgIGZ1bmN0aW9uIG9ucmVqZWN0KHZhbHVlKSB7IHRyeSB7IHN0ZXAoXCJ0aHJvd1wiLCB2YWx1ZSk7IH0gY2F0Y2ggKGUpIHsgcmVqZWN0KGUpOyB9IH1cbiAgICAgICAgZnVuY3Rpb24gc3RlcCh2ZXJiLCB2YWx1ZSkge1xuICAgICAgICAgICAgdmFyIHJlc3VsdCA9IGdlbmVyYXRvclt2ZXJiXSh2YWx1ZSk7XG4gICAgICAgICAgICByZXN1bHQuZG9uZSA/IHJlc29sdmUocmVzdWx0LnZhbHVlKSA6IGNhc3QocmVzdWx0LnZhbHVlKS50aGVuKG9uZnVsZmlsbCwgb25yZWplY3QpO1xuICAgICAgICB9XG4gICAgICAgIHN0ZXAoXCJuZXh0XCIsIHZvaWQgMCk7XG4gICAgfSk7XG59O1xudmFyIGF1cmVsaWFfYWRhbF8xID0gcmVxdWlyZSgnLi9hdXJlbGlhLWFkYWwnKTtcbmV4cG9ydHMuQXVyZWxpYUFkYWwgPSBhdXJlbGlhX2FkYWxfMS5BdXJlbGlhQWRhbDtcbnZhciBhdXJlbGlhX2FkYWxfZmV0Y2hfY29uZmlnXzEgPSByZXF1aXJlKCcuL2F1cmVsaWEtYWRhbC1mZXRjaC1jb25maWcnKTtcbmV4cG9ydHMuQXVyZWxpYUFkYWxGZXRjaENvbmZpZyA9IGF1cmVsaWFfYWRhbF9mZXRjaF9jb25maWdfMS5BdXJlbGlhQWRhbEZldGNoQ29uZmlnO1xudmFyIGF1cmVsaWFfYWRhbF9hdXRob3JpemVfc3RlcF8xID0gcmVxdWlyZSgnLi9hdXJlbGlhLWFkYWwtYXV0aG9yaXplLXN0ZXAnKTtcbmV4cG9ydHMuQXVyZWxpYUFkYWxBdXRob3JpemVTdGVwID0gYXVyZWxpYV9hZGFsX2F1dGhvcml6ZV9zdGVwXzEuQXVyZWxpYUFkYWxBdXRob3JpemVTdGVwO1xuZnVuY3Rpb24gY29uZmlndXJlKGZyYW1ld29ya0NvbmZpZywgY29uZmlnKSB7XG4gICAgbGV0IGF1cmVsaWFBZGFsID0gZnJhbWV3b3JrQ29uZmlnLmNvbnRhaW5lci5nZXQoYXVyZWxpYV9hZGFsXzEuQXVyZWxpYUFkYWwpO1xuICAgIGF1cmVsaWFBZGFsLmNvbmZpZ3VyZShjb25maWcpO1xufVxuZXhwb3J0cy5jb25maWd1cmUgPSBjb25maWd1cmU7XG4iLCJpbXBvcnQgeyBGcmFtZXdvcmtDb25maWd1cmF0aW9uIH0gZnJvbSAnYXVyZWxpYS1mcmFtZXdvcmsnO1xyXG5pbXBvcnQgeyBBdXJlbGlhQWRhbENvbmZpZyB9IGZyb20gJy4vYXVyZWxpYS1hZGFsLWNvbmZpZyc7XHJcbmltcG9ydCB7IEF1cmVsaWFBZGFsIH0gZnJvbSAnLi9hdXJlbGlhLWFkYWwnO1xyXG5pbXBvcnQgeyBBdXJlbGlhQWRhbEZldGNoQ29uZmlnIH0gZnJvbSAnLi9hdXJlbGlhLWFkYWwtZmV0Y2gtY29uZmlnJztcclxuaW1wb3J0IHsgQXVyZWxpYUFkYWxBdXRob3JpemVTdGVwIH0gZnJvbSAnLi9hdXJlbGlhLWFkYWwtYXV0aG9yaXplLXN0ZXAnO1xyXG5cclxuZXhwb3J0IGZ1bmN0aW9uIGNvbmZpZ3VyZShmcmFtZXdvcmtDb25maWc6IEZyYW1ld29ya0NvbmZpZ3VyYXRpb24sIGNvbmZpZzogQXVyZWxpYUFkYWxDb25maWcpIHtcclxuICBsZXQgYXVyZWxpYUFkYWw6IEF1cmVsaWFBZGFsID0gZnJhbWV3b3JrQ29uZmlnLmNvbnRhaW5lci5nZXQoQXVyZWxpYUFkYWwpO1xyXG4gIFxyXG4gIGF1cmVsaWFBZGFsLmNvbmZpZ3VyZShjb25maWcpO1xyXG59XHJcblxyXG5leHBvcnQge1xyXG4gICAgQXVyZWxpYUFkYWwsXHJcbiAgICBBdXJlbGlhQWRhbENvbmZpZyxcclxuICAgIEF1cmVsaWFBZGFsRmV0Y2hDb25maWcsXHJcbiAgICBBdXJlbGlhQWRhbEF1dGhvcml6ZVN0ZXBcclxufSJdLCJzb3VyY2VSb290IjoiL3NvdXJjZS8ifQ==
