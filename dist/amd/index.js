"use strict";

var __awaiter = undefined && undefined.__awaiter || function (thisArg, _arguments, Promise, generator) {
    return new Promise(function (resolve, reject) {
        generator = generator.call(thisArg, _arguments);
        function cast(value) {
            return value instanceof Promise && value.constructor === Promise ? value : new Promise(function (resolve) {
                resolve(value);
            });
        }
        function onfulfill(value) {
            try {
                step("next", value);
            } catch (e) {
                reject(e);
            }
        }
        function onreject(value) {
            try {
                step("throw", value);
            } catch (e) {
                reject(e);
            }
        }
        function step(verb, value) {
            var result = generator[verb](value);
            result.done ? resolve(result.value) : cast(result.value).then(onfulfill, onreject);
        }
        step("next", void 0);
    });
};
define(["require", "exports", './aurelia-adal', './aurelia-adal-fetch-config', './aurelia-adal-authorize-step'], function (require, exports, aurelia_adal_1, aurelia_adal_fetch_config_1, aurelia_adal_authorize_step_1) {
    exports.AureliaAdal = aurelia_adal_1.AureliaAdal;
    exports.AureliaAdalFetchConfig = aurelia_adal_fetch_config_1.AureliaAdalFetchConfig;
    exports.AureliaAdalAuthorizeStep = aurelia_adal_authorize_step_1.AureliaAdalAuthorizeStep;
    function configure(frameworkConfig, config) {
        var aureliaAdal = frameworkConfig.container.get(aurelia_adal_1.AureliaAdal);
        aureliaAdal.configure(config);
    }
    exports.configure = configure;
});
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzIiwiaW5kZXgudHMiXSwibmFtZXMiOlsiY29uZmlndXJlIl0sIm1hcHBpbmdzIjoiOztBQUFBLElBQUksU0FBUyxHQUFHLEFBQUMsYUFBUSxVQUFLLFNBQVMsSUFBSyxVQUFVLE9BQU8sRUFBRSxVQUFVLEVBQUUsT0FBTyxFQUFFLFNBQVMsRUFBRTtBQUMzRixXQUFPLElBQUksT0FBTyxDQUFDLFVBQVUsT0FBTyxFQUFFLE1BQU0sRUFBRTtBQUMxQyxpQkFBUyxHQUFHLFNBQVMsQ0FBQyxJQUFJLENBQUMsT0FBTyxFQUFFLFVBQVUsQ0FBQyxDQUFDO0FBQ2hELGlCQUFTLElBQUksQ0FBQyxLQUFLLEVBQUU7QUFBRSxtQkFBTyxLQUFLLFlBQVksT0FBTyxJQUFJLEtBQUssQ0FBQyxXQUFXLEtBQUssT0FBTyxHQUFHLEtBQUssR0FBRyxJQUFJLE9BQU8sQ0FBQyxVQUFVLE9BQU8sRUFBRTtBQUFFLHVCQUFPLENBQUMsS0FBSyxDQUFDLENBQUM7YUFBRSxDQUFDLENBQUM7U0FBRTtBQUN4SixpQkFBUyxTQUFTLENBQUMsS0FBSyxFQUFFO0FBQUUsZ0JBQUk7QUFBRSxvQkFBSSxDQUFDLE1BQU0sRUFBRSxLQUFLLENBQUMsQ0FBQzthQUFFLENBQUMsT0FBTyxDQUFDLEVBQUU7QUFBRSxzQkFBTSxDQUFDLENBQUMsQ0FBQyxDQUFDO2FBQUU7U0FBRTtBQUNuRixpQkFBUyxRQUFRLENBQUMsS0FBSyxFQUFFO0FBQUUsZ0JBQUk7QUFBRSxvQkFBSSxDQUFDLE9BQU8sRUFBRSxLQUFLLENBQUMsQ0FBQzthQUFFLENBQUMsT0FBTyxDQUFDLEVBQUU7QUFBRSxzQkFBTSxDQUFDLENBQUMsQ0FBQyxDQUFDO2FBQUU7U0FBRTtBQUNuRixpQkFBUyxJQUFJLENBQUMsSUFBSSxFQUFFLEtBQUssRUFBRTtBQUN2QixnQkFBSSxNQUFNLEdBQUcsU0FBUyxDQUFDLElBQUksQ0FBQyxDQUFDLEtBQUssQ0FBQyxDQUFDO0FBQ3BDLGtCQUFNLENBQUMsSUFBSSxHQUFHLE9BQU8sQ0FBQyxNQUFNLENBQUMsS0FBSyxDQUFDLEdBQUcsSUFBSSxDQUFDLE1BQU0sQ0FBQyxLQUFLLENBQUMsQ0FBQyxJQUFJLENBQUMsU0FBUyxFQUFFLFFBQVEsQ0FBQyxDQUFDO1NBQ3RGO0FBQ0QsWUFBSSxDQUFDLE1BQU0sRUFBRSxLQUFLLENBQUMsQ0FBQyxDQUFDO0tBQ3hCLENBQUMsQ0FBQztDQUNOLENBQUM7QUFDRixNQUFNLENBQUMsQ0FBQyxTQUFTLEVBQUUsU0FBUyxFQUFFLGdCQUFnQixFQUFFLDZCQUE2QixFQUFFLCtCQUErQixDQUFDLEVBQUUsVUFBVSxPQUFPLEVBQUUsT0FBTyxFQUFFLGNBQWMsRUFBRSwyQkFBMkIsRUFBRSw2QkFBNkIsRUFBRTtBQ0FyTixXQUFBLENBQUEsV0FBVyxHQUFBLGNBQUEsQ0FBQSxXQUFBLENBQUE7QUFFWCxXQUFBLENBQUEsc0JBQXNCLEdBQUEsMkJBQUEsQ0FBQSxzQkFBQSxDQUFBO0FBQ3RCLFdBQUEsQ0FBQSx3QkFBd0IsR0FBQSw2QkFBQSxDQUFBLHdCQUFBLENBQUE7QUFWNUIsYUFBQSxTQUFBLENBQTBCLGVBQXVDLEVBQUUsTUFBeUIsRUFBQTtBQUMxRkEsWUFBSUEsV0FBV0EsR0FBZ0JBLGVBQWVBLENBQUNBLFNBQVNBLENBQUNBLEdBQUdBLENBQUNBLGNBQUFBLENBQUFBLFdBQVdBLENBQUNBLENBQUNBO0FBRTFFQSxtQkFBV0EsQ0FBQ0EsU0FBU0EsQ0FBQ0EsTUFBTUEsQ0FBQ0EsQ0FBQ0E7S0FDL0JBO0FBSmUsV0FBQSxDQUFBLFNBQVMsR0FBQSxTQUl4QixDQUFBO0NEWUEsQ0FBQyxDQUFDIiwiZmlsZSI6ImluZGV4LmpzIiwic291cmNlc0NvbnRlbnQiOlsidmFyIF9fYXdhaXRlciA9ICh0aGlzICYmIHRoaXMuX19hd2FpdGVyKSB8fCBmdW5jdGlvbiAodGhpc0FyZywgX2FyZ3VtZW50cywgUHJvbWlzZSwgZ2VuZXJhdG9yKSB7XG4gICAgcmV0dXJuIG5ldyBQcm9taXNlKGZ1bmN0aW9uIChyZXNvbHZlLCByZWplY3QpIHtcbiAgICAgICAgZ2VuZXJhdG9yID0gZ2VuZXJhdG9yLmNhbGwodGhpc0FyZywgX2FyZ3VtZW50cyk7XG4gICAgICAgIGZ1bmN0aW9uIGNhc3QodmFsdWUpIHsgcmV0dXJuIHZhbHVlIGluc3RhbmNlb2YgUHJvbWlzZSAmJiB2YWx1ZS5jb25zdHJ1Y3RvciA9PT0gUHJvbWlzZSA/IHZhbHVlIDogbmV3IFByb21pc2UoZnVuY3Rpb24gKHJlc29sdmUpIHsgcmVzb2x2ZSh2YWx1ZSk7IH0pOyB9XG4gICAgICAgIGZ1bmN0aW9uIG9uZnVsZmlsbCh2YWx1ZSkgeyB0cnkgeyBzdGVwKFwibmV4dFwiLCB2YWx1ZSk7IH0gY2F0Y2ggKGUpIHsgcmVqZWN0KGUpOyB9IH1cbiAgICAgICAgZnVuY3Rpb24gb25yZWplY3QodmFsdWUpIHsgdHJ5IHsgc3RlcChcInRocm93XCIsIHZhbHVlKTsgfSBjYXRjaCAoZSkgeyByZWplY3QoZSk7IH0gfVxuICAgICAgICBmdW5jdGlvbiBzdGVwKHZlcmIsIHZhbHVlKSB7XG4gICAgICAgICAgICB2YXIgcmVzdWx0ID0gZ2VuZXJhdG9yW3ZlcmJdKHZhbHVlKTtcbiAgICAgICAgICAgIHJlc3VsdC5kb25lID8gcmVzb2x2ZShyZXN1bHQudmFsdWUpIDogY2FzdChyZXN1bHQudmFsdWUpLnRoZW4ob25mdWxmaWxsLCBvbnJlamVjdCk7XG4gICAgICAgIH1cbiAgICAgICAgc3RlcChcIm5leHRcIiwgdm9pZCAwKTtcbiAgICB9KTtcbn07XG5kZWZpbmUoW1wicmVxdWlyZVwiLCBcImV4cG9ydHNcIiwgJy4vYXVyZWxpYS1hZGFsJywgJy4vYXVyZWxpYS1hZGFsLWZldGNoLWNvbmZpZycsICcuL2F1cmVsaWEtYWRhbC1hdXRob3JpemUtc3RlcCddLCBmdW5jdGlvbiAocmVxdWlyZSwgZXhwb3J0cywgYXVyZWxpYV9hZGFsXzEsIGF1cmVsaWFfYWRhbF9mZXRjaF9jb25maWdfMSwgYXVyZWxpYV9hZGFsX2F1dGhvcml6ZV9zdGVwXzEpIHtcbiAgICBleHBvcnRzLkF1cmVsaWFBZGFsID0gYXVyZWxpYV9hZGFsXzEuQXVyZWxpYUFkYWw7XG4gICAgZXhwb3J0cy5BdXJlbGlhQWRhbEZldGNoQ29uZmlnID0gYXVyZWxpYV9hZGFsX2ZldGNoX2NvbmZpZ18xLkF1cmVsaWFBZGFsRmV0Y2hDb25maWc7XG4gICAgZXhwb3J0cy5BdXJlbGlhQWRhbEF1dGhvcml6ZVN0ZXAgPSBhdXJlbGlhX2FkYWxfYXV0aG9yaXplX3N0ZXBfMS5BdXJlbGlhQWRhbEF1dGhvcml6ZVN0ZXA7XG4gICAgZnVuY3Rpb24gY29uZmlndXJlKGZyYW1ld29ya0NvbmZpZywgY29uZmlnKSB7XG4gICAgICAgIGxldCBhdXJlbGlhQWRhbCA9IGZyYW1ld29ya0NvbmZpZy5jb250YWluZXIuZ2V0KGF1cmVsaWFfYWRhbF8xLkF1cmVsaWFBZGFsKTtcbiAgICAgICAgYXVyZWxpYUFkYWwuY29uZmlndXJlKGNvbmZpZyk7XG4gICAgfVxuICAgIGV4cG9ydHMuY29uZmlndXJlID0gY29uZmlndXJlO1xufSk7XG4iLCJpbXBvcnQgeyBGcmFtZXdvcmtDb25maWd1cmF0aW9uIH0gZnJvbSAnYXVyZWxpYS1mcmFtZXdvcmsnO1xyXG5pbXBvcnQgeyBBdXJlbGlhQWRhbENvbmZpZyB9IGZyb20gJy4vYXVyZWxpYS1hZGFsLWNvbmZpZyc7XHJcbmltcG9ydCB7IEF1cmVsaWFBZGFsIH0gZnJvbSAnLi9hdXJlbGlhLWFkYWwnO1xyXG5pbXBvcnQgeyBBdXJlbGlhQWRhbEZldGNoQ29uZmlnIH0gZnJvbSAnLi9hdXJlbGlhLWFkYWwtZmV0Y2gtY29uZmlnJztcclxuaW1wb3J0IHsgQXVyZWxpYUFkYWxBdXRob3JpemVTdGVwIH0gZnJvbSAnLi9hdXJlbGlhLWFkYWwtYXV0aG9yaXplLXN0ZXAnO1xyXG5cclxuZXhwb3J0IGZ1bmN0aW9uIGNvbmZpZ3VyZShmcmFtZXdvcmtDb25maWc6IEZyYW1ld29ya0NvbmZpZ3VyYXRpb24sIGNvbmZpZzogQXVyZWxpYUFkYWxDb25maWcpIHtcclxuICBsZXQgYXVyZWxpYUFkYWw6IEF1cmVsaWFBZGFsID0gZnJhbWV3b3JrQ29uZmlnLmNvbnRhaW5lci5nZXQoQXVyZWxpYUFkYWwpO1xyXG4gIFxyXG4gIGF1cmVsaWFBZGFsLmNvbmZpZ3VyZShjb25maWcpO1xyXG59XHJcblxyXG5leHBvcnQge1xyXG4gICAgQXVyZWxpYUFkYWwsXHJcbiAgICBBdXJlbGlhQWRhbENvbmZpZyxcclxuICAgIEF1cmVsaWFBZGFsRmV0Y2hDb25maWcsXHJcbiAgICBBdXJlbGlhQWRhbEF1dGhvcml6ZVN0ZXBcclxufSJdLCJzb3VyY2VSb290IjoiL3NvdXJjZS8ifQ==
